{"ast":null,"code":"import Tool from \"./Tool\";\nexport default class Circle extends Tool {\n  constructor(canvas) {\n    super(canvas);\n    this.listen();\n  }\n\n  listen() {\n    this.canvas.onmousemove = this.mouseMoveHandler.bind(this);\n    this.canvas.onmousedown = this.mouseDownHandler.bind(this);\n    this.canvas.onmouseup = this.mouseUpHandler.bind(this);\n  }\n\n  mouseDownHandler(e) {\n    this.mouseDown = true;\n    let canvasData = this.canvas.toDataURL();\n    this.ctx.beginPath();\n    this.startX = e.pageX - e.target.offsetLeft;\n    this.startY = e.pageY - e.target.offsetTop;\n    this.saved = canvasData;\n  }\n\n  mouseUpHandler(e) {\n    this.mouseDown = false;\n  }\n\n  mouseMoveHandler(e) {\n    if (this.mouseDown) {\n      let curentX = e.pageX - e.target.offsetLeft;\n      let curentY = e.pageY - e.target.offsetTop;\n      let width = curentX - this.startX;\n      let height = curentY - this.startY;\n      let r = Math.sqrt(width ** 2 + height ** 2);\n      this.draw(this.startX, this.startY, r);\n    }\n  }\n\n  draw(x, y, r) {\n    const img = new Image();\n    img.src = this.saved;\n\n    img.onload = async function () {\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      this.ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height);\n      this.ctx.beginPath();\n      this.ctx.arc(x, y, r, 0, 2 * Math.PI);\n      this.ctx.fill();\n      this.ctx.stroke();\n    }.bind(this);\n  }\n\n}","map":{"version":3,"sources":["/home/seu/projects/online_paint/Fullstack-websocket-paint/client/src/tools/Circle.js"],"names":["Tool","Circle","constructor","canvas","listen","onmousemove","mouseMoveHandler","bind","onmousedown","mouseDownHandler","onmouseup","mouseUpHandler","e","mouseDown","canvasData","toDataURL","ctx","beginPath","startX","pageX","target","offsetLeft","startY","pageY","offsetTop","saved","curentX","curentY","width","height","r","Math","sqrt","draw","x","y","img","Image","src","onload","clearRect","drawImage","arc","PI","fill","stroke"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,QAAjB;AAGA,eAAe,MAAMC,MAAN,SAAqBD,IAArB,CAA0B;AACrCE,EAAAA,WAAW,CAACC,MAAD,EAAS;AAChB,UAAMA,MAAN;AACA,SAAKC,MAAL;AACH;;AAEDA,EAAAA,MAAM,GAAG;AACL,SAAKD,MAAL,CAAYE,WAAZ,GAA0B,KAAKC,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAA1B;AACA,SAAKJ,MAAL,CAAYK,WAAZ,GAA0B,KAAKC,gBAAL,CAAsBF,IAAtB,CAA2B,IAA3B,CAA1B;AACA,SAAKJ,MAAL,CAAYO,SAAZ,GAAwB,KAAKC,cAAL,CAAoBJ,IAApB,CAAyB,IAAzB,CAAxB;AACH;;AAEDE,EAAAA,gBAAgB,CAACG,CAAD,EAAI;AAChB,SAAKC,SAAL,GAAiB,IAAjB;AACA,QAAIC,UAAU,GAAG,KAAKX,MAAL,CAAYY,SAAZ,EAAjB;AACA,SAAKC,GAAL,CAASC,SAAT;AACA,SAAKC,MAAL,GAAcN,CAAC,CAACO,KAAF,GAAQP,CAAC,CAACQ,MAAF,CAASC,UAA/B;AACA,SAAKC,MAAL,GAAcV,CAAC,CAACW,KAAF,GAAQX,CAAC,CAACQ,MAAF,CAASI,SAA/B;AACA,SAAKC,KAAL,GAAaX,UAAb;AACH;;AAEDH,EAAAA,cAAc,CAACC,CAAD,EAAI;AACd,SAAKC,SAAL,GAAiB,KAAjB;AACH;;AAEDP,EAAAA,gBAAgB,CAACM,CAAD,EAAI;AAChB,QAAG,KAAKC,SAAR,EAAmB;AACf,UAAIa,OAAO,GAAId,CAAC,CAACO,KAAF,GAAQP,CAAC,CAACQ,MAAF,CAASC,UAAhC;AACA,UAAIM,OAAO,GAAIf,CAAC,CAACW,KAAF,GAAQX,CAAC,CAACQ,MAAF,CAASI,SAAhC;AACA,UAAII,KAAK,GAAGF,OAAO,GAAC,KAAKR,MAAzB;AACA,UAAIW,MAAM,GAAGF,OAAO,GAAC,KAAKL,MAA1B;AACA,UAAIQ,CAAC,GAAGC,IAAI,CAACC,IAAL,CAAUJ,KAAK,IAAE,CAAP,GAAWC,MAAM,IAAE,CAA7B,CAAR;AACA,WAAKI,IAAL,CAAU,KAAKf,MAAf,EAAuB,KAAKI,MAA5B,EAAoCQ,CAApC;AACH;AACJ;;AAEDG,EAAAA,IAAI,CAACC,CAAD,EAAGC,CAAH,EAAKL,CAAL,EAAQ;AACR,UAAMM,GAAG,GAAG,IAAIC,KAAJ,EAAZ;AACAD,IAAAA,GAAG,CAACE,GAAJ,GAAU,KAAKb,KAAf;;AACAW,IAAAA,GAAG,CAACG,MAAJ,GAAa,kBAAkB;AAC3B,WAAKvB,GAAL,CAASwB,SAAT,CAAmB,CAAnB,EAAqB,CAArB,EAAwB,KAAKrC,MAAL,CAAYyB,KAApC,EAA2C,KAAKzB,MAAL,CAAY0B,MAAvD;AACA,WAAKb,GAAL,CAASyB,SAAT,CAAmBL,GAAnB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B,KAAKjC,MAAL,CAAYyB,KAA1C,EAAiD,KAAKzB,MAAL,CAAY0B,MAA7D;AACA,WAAKb,GAAL,CAASC,SAAT;AACA,WAAKD,GAAL,CAAS0B,GAAT,CAAaR,CAAb,EAAgBC,CAAhB,EAAmBL,CAAnB,EAAsB,CAAtB,EAAyB,IAAEC,IAAI,CAACY,EAAhC;AACA,WAAK3B,GAAL,CAAS4B,IAAT;AACA,WAAK5B,GAAL,CAAS6B,MAAT;AACH,KAPY,CAOXtC,IAPW,CAON,IAPM,CAAb;AAQH;;AA/CoC","sourcesContent":["import Tool from \"./Tool\";\n\n\nexport default class Circle extends Tool {\n    constructor(canvas) {\n        super(canvas);\n        this.listen()\n    }\n\n    listen() {\n        this.canvas.onmousemove = this.mouseMoveHandler.bind(this)\n        this.canvas.onmousedown = this.mouseDownHandler.bind(this)\n        this.canvas.onmouseup = this.mouseUpHandler.bind(this)\n    }\n\n    mouseDownHandler(e) {\n        this.mouseDown = true\n        let canvasData = this.canvas.toDataURL()\n        this.ctx.beginPath()\n        this.startX = e.pageX-e.target.offsetLeft\n        this.startY = e.pageY-e.target.offsetTop\n        this.saved = canvasData\n    }\n\n    mouseUpHandler(e) {\n        this.mouseDown = false\n    }\n\n    mouseMoveHandler(e) {\n        if(this.mouseDown) {\n            let curentX =  e.pageX-e.target.offsetLeft\n            let curentY =  e.pageY-e.target.offsetTop\n            let width = curentX-this.startX\n            let height = curentY-this.startY\n            let r = Math.sqrt(width**2 + height**2)\n            this.draw(this.startX, this.startY, r)\n        }\n    }\n\n    draw(x,y,r) {\n        const img = new Image()\n        img.src = this.saved\n        img.onload = async function () {\n            this.ctx.clearRect(0,0, this.canvas.width, this.canvas.height)\n            this.ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height)\n            this.ctx.beginPath()\n            this.ctx.arc(x, y, r, 0, 2*Math.PI)\n            this.ctx.fill()\n            this.ctx.stroke()\n        }.bind(this)\n    }\n}\n"]},"metadata":{},"sourceType":"module"}