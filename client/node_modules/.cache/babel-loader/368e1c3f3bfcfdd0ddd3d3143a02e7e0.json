{"ast":null,"code":"import Tool from \"./Tool\";\nexport default class Rect extends Tool {\n  constructor(canvas, socket, id) {\n    super(canvas, socket, id);\n    this.listen();\n  }\n\n  listen() {\n    this.canvas.onmousemove = this.mouseMoveHandler.bind(this);\n    this.canvas.onmousedown = this.mouseDownHandler.bind(this);\n    this.canvas.onmouseup = this.mouseUpHandler.bind(this);\n  }\n\n  mouseUpHandler(e) {\n    this.mouseDown = false;\n    this.socket.send(JSON.stringify({\n      method: 'draw',\n      id: this.id,\n      figure: {\n        type: 'rect',\n        x: this.startX,\n        y: this.startY,\n        width: this.width,\n        height: this.height,\n        color: this.ctx.fillStyle\n      }\n    }));\n  }\n\n  mouseDownHandler(e) {\n    this.mouseDown = true;\n    this.ctx.beginPath();\n    this.startX = e.pageX - e.target.offsetLeft;\n    this.startY = e.pageY - e.target.offsetTop;\n    this.saved = this.canvas.toDataURL();\n  }\n\n  mouseMoveHandler(e) {\n    if (this.mouseDown) {\n      let currentX = e.pageX - e.target.offsetLeft;\n      let currentY = e.pageY - e.target.offsetTop;\n      this.width = currentX - this.startX;\n      this.height = currentY - this.startY;\n      this.draw(this.startX, this.startY, this.width, this.height);\n    }\n  }\n\n  draw(x, y, w, h) {\n    const img = new Image();\n    img.src = this.saved;\n\n    img.onload = () => {\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      this.ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height);\n      this.ctx.beginPath();\n      this.ctx.rect(x, y, w, h);\n      this.ctx.fill();\n      this.ctx.stroke();\n    };\n  }\n\n  static staticDraw(ctx, x, y, w, h, color) {\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.rect(x, y, w, h);\n    ctx.fill();\n    ctx.stroke();\n  }\n\n}","map":{"version":3,"sources":["/home/seu/projects/online_paint/Fullstack-websocket-paint/client/src/tools/Rect.js"],"names":["Tool","Rect","constructor","canvas","socket","id","listen","onmousemove","mouseMoveHandler","bind","onmousedown","mouseDownHandler","onmouseup","mouseUpHandler","e","mouseDown","send","JSON","stringify","method","figure","type","x","startX","y","startY","width","height","color","ctx","fillStyle","beginPath","pageX","target","offsetLeft","pageY","offsetTop","saved","toDataURL","currentX","currentY","draw","w","h","img","Image","src","onload","clearRect","drawImage","rect","fill","stroke","staticDraw"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,QAAjB;AAEA,eAAe,MAAMC,IAAN,SAAmBD,IAAnB,CAAwB;AACnCE,EAAAA,WAAW,CAACC,MAAD,EAASC,MAAT,EAAiBC,EAAjB,EAAqB;AAC5B,UAAMF,MAAN,EAAcC,MAAd,EAAsBC,EAAtB;AACA,SAAKC,MAAL;AACH;;AAEDA,EAAAA,MAAM,GAAG;AACL,SAAKH,MAAL,CAAYI,WAAZ,GAA0B,KAAKC,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAA1B;AACA,SAAKN,MAAL,CAAYO,WAAZ,GAA0B,KAAKC,gBAAL,CAAsBF,IAAtB,CAA2B,IAA3B,CAA1B;AACA,SAAKN,MAAL,CAAYS,SAAZ,GAAwB,KAAKC,cAAL,CAAoBJ,IAApB,CAAyB,IAAzB,CAAxB;AACH;;AAEDI,EAAAA,cAAc,CAACC,CAAD,EAAI;AACd,SAAKC,SAAL,GAAiB,KAAjB;AACA,SAAKX,MAAL,CAAYY,IAAZ,CAAiBC,IAAI,CAACC,SAAL,CAAe;AAC5BC,MAAAA,MAAM,EAAE,MADoB;AAE5Bd,MAAAA,EAAE,EAAE,KAAKA,EAFmB;AAG5Be,MAAAA,MAAM,EAAE;AACJC,QAAAA,IAAI,EAAE,MADF;AAEJC,QAAAA,CAAC,EAAE,KAAKC,MAFJ;AAGJC,QAAAA,CAAC,EAAE,KAAKC,MAHJ;AAIJC,QAAAA,KAAK,EAAE,KAAKA,KAJR;AAKJC,QAAAA,MAAM,EAAE,KAAKA,MALT;AAMJC,QAAAA,KAAK,EAAE,KAAKC,GAAL,CAASC;AANZ;AAHoB,KAAf,CAAjB;AAYH;;AACDnB,EAAAA,gBAAgB,CAACG,CAAD,EAAI;AAChB,SAAKC,SAAL,GAAiB,IAAjB;AACA,SAAKc,GAAL,CAASE,SAAT;AACA,SAAKR,MAAL,GAAcT,CAAC,CAACkB,KAAF,GAAUlB,CAAC,CAACmB,MAAF,CAASC,UAAjC;AACA,SAAKT,MAAL,GAAcX,CAAC,CAACqB,KAAF,GAAUrB,CAAC,CAACmB,MAAF,CAASG,SAAjC;AACA,SAAKC,KAAL,GAAa,KAAKlC,MAAL,CAAYmC,SAAZ,EAAb;AACH;;AACD9B,EAAAA,gBAAgB,CAACM,CAAD,EAAI;AAChB,QAAI,KAAKC,SAAT,EAAoB;AAChB,UAAIwB,QAAQ,GAAGzB,CAAC,CAACkB,KAAF,GAAUlB,CAAC,CAACmB,MAAF,CAASC,UAAlC;AACA,UAAIM,QAAQ,GAAG1B,CAAC,CAACqB,KAAF,GAAUrB,CAAC,CAACmB,MAAF,CAASG,SAAlC;AACA,WAAKV,KAAL,GAAaa,QAAQ,GAAG,KAAKhB,MAA7B;AACA,WAAKI,MAAL,GAAca,QAAQ,GAAG,KAAKf,MAA9B;AACA,WAAKgB,IAAL,CAAU,KAAKlB,MAAf,EAAuB,KAAKE,MAA5B,EAAoC,KAAKC,KAAzC,EAAgD,KAAKC,MAArD;AACH;AACJ;;AAEDc,EAAAA,IAAI,CAACnB,CAAD,EAAIE,CAAJ,EAAOkB,CAAP,EAAUC,CAAV,EAAa;AACb,UAAMC,GAAG,GAAG,IAAIC,KAAJ,EAAZ;AACAD,IAAAA,GAAG,CAACE,GAAJ,GAAU,KAAKT,KAAf;;AACAO,IAAAA,GAAG,CAACG,MAAJ,GAAa,MAAM;AACf,WAAKlB,GAAL,CAASmB,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,KAAK7C,MAAL,CAAYuB,KAArC,EAA4C,KAAKvB,MAAL,CAAYwB,MAAxD;AACA,WAAKE,GAAL,CAASoB,SAAT,CAAmBL,GAAnB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B,KAAKzC,MAAL,CAAYuB,KAA1C,EAAiD,KAAKvB,MAAL,CAAYwB,MAA7D;AACA,WAAKE,GAAL,CAASE,SAAT;AACA,WAAKF,GAAL,CAASqB,IAAT,CAAc5B,CAAd,EAAiBE,CAAjB,EAAoBkB,CAApB,EAAuBC,CAAvB;AACA,WAAKd,GAAL,CAASsB,IAAT;AACA,WAAKtB,GAAL,CAASuB,MAAT;AACH,KAPD;AAQH;;AAED,SAAOC,UAAP,CAAkBxB,GAAlB,EAAuBP,CAAvB,EAA0BE,CAA1B,EAA6BkB,CAA7B,EAAgCC,CAAhC,EAAmCf,KAAnC,EAA0C;AACtCC,IAAAA,GAAG,CAACC,SAAJ,GAAgBF,KAAhB;AACAC,IAAAA,GAAG,CAACE,SAAJ;AACAF,IAAAA,GAAG,CAACqB,IAAJ,CAAS5B,CAAT,EAAYE,CAAZ,EAAekB,CAAf,EAAkBC,CAAlB;AACAd,IAAAA,GAAG,CAACsB,IAAJ;AACAtB,IAAAA,GAAG,CAACuB,MAAJ;AACH;;AA/DkC","sourcesContent":["import Tool from \"./Tool\";\n\nexport default class Rect extends Tool {\n    constructor(canvas, socket, id) {\n        super(canvas, socket, id);\n        this.listen()\n    }\n\n    listen() {\n        this.canvas.onmousemove = this.mouseMoveHandler.bind(this)\n        this.canvas.onmousedown = this.mouseDownHandler.bind(this)\n        this.canvas.onmouseup = this.mouseUpHandler.bind(this)\n    }\n\n    mouseUpHandler(e) {\n        this.mouseDown = false\n        this.socket.send(JSON.stringify({\n            method: 'draw',\n            id: this.id,\n            figure: {\n                type: 'rect',\n                x: this.startX,\n                y: this.startY,\n                width: this.width,\n                height: this.height,\n                color: this.ctx.fillStyle\n            }\n        }))\n    }\n    mouseDownHandler(e) {\n        this.mouseDown = true\n        this.ctx.beginPath()\n        this.startX = e.pageX - e.target.offsetLeft;\n        this.startY = e.pageY - e.target.offsetTop;\n        this.saved = this.canvas.toDataURL()\n    }\n    mouseMoveHandler(e) {\n        if (this.mouseDown) {\n            let currentX = e.pageX - e.target.offsetLeft;\n            let currentY = e.pageY - e.target.offsetTop;\n            this.width = currentX - this.startX;\n            this.height = currentY - this.startY;\n            this.draw(this.startX, this.startY, this.width, this.height)\n        }\n    }\n\n    draw(x, y, w, h) {\n        const img = new Image()\n        img.src = this.saved\n        img.onload = () => {\n            this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n            this.ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height)\n            this.ctx.beginPath()\n            this.ctx.rect(x, y, w, h)\n            this.ctx.fill()\n            this.ctx.stroke()\n        }\n    }\n\n    static staticDraw(ctx, x, y, w, h, color) {\n        ctx.fillStyle = color\n        ctx.beginPath()\n        ctx.rect(x, y, w, h)\n        ctx.fill()\n        ctx.stroke()\n    }\n}\n"]},"metadata":{},"sourceType":"module"}