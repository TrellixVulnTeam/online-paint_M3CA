{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/seu/projects/online_paint/Fullstack-websocket-paint/client/src/components/Canvas.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport \"../styles/canvas.scss\";\nimport { observer } from \"mobx-react-lite\";\nimport canvasState from \"../store/canvasState\";\nimport toolState from \"../store/toolState\";\nimport Brush from \"../tools/Brush\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport Rect from \"../tools/Rect\";\nimport axios from 'axios';\nconst Canvas = observer(_c = _s(() => {\n  _s();\n\n  const canvasRef = useRef();\n  const usernameRef = useRef();\n  const [modal, setModal] = useState(true);\n  const params = useParams();\n  useEffect(() => {\n    canvasState.setCanvas(canvasRef.current);\n    let ctx = canvasRef.current.getContext('2d');\n    axios.get(`http://localhost:5000/image?id=${params.id}`).then(response => {\n      const img = new Image();\n      img.src = response.data;\n\n      img.onload = () => {\n        ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n        ctx.drawImage(img, 0, 0, canvasRef.current.width, canvasRef.current.height);\n      };\n    });\n  }, []);\n  useEffect(() => {\n    if (canvasState.username) {\n      const socket = new WebSocket(`ws://localhost:5000/`);\n      canvasState.setSocket(socket);\n      canvasState.setSessionId(params.id);\n      toolState.setTool(new Brush(canvasRef.current, socket, params.id));\n\n      socket.onopen = () => {\n        console.log('Подключение установлено');\n        socket.send(JSON.stringify({\n          id: params.id,\n          username: canvasState.username,\n          method: \"connection\"\n        }));\n      };\n\n      socket.onmessage = event => {\n        let msg = JSON.parse(event.data);\n\n        switch (msg.method) {\n          case \"connection\":\n            console.log(`пользователь ${msg.username} присоединился`);\n            break;\n\n          case \"draw\":\n            drawHandler(msg);\n            break;\n        }\n      };\n    }\n  }, [canvasState.username]);\n\n  const drawHandler = msg => {\n    const figure = msg.figure;\n    const ctx = canvasRef.current.getContext('2d');\n\n    switch (figure.type) {\n      case \"brush\":\n        Brush.draw(ctx, figure.x, figure.y);\n        break;\n\n      case \"rect\":\n        Rect.staticDraw(ctx, figure.x, figure.y, figure.width, figure.height, figure.color);\n        break;\n\n      case \"finish\":\n        ctx.beginPath();\n        break;\n    }\n  };\n\n  const mouseDownHandler = () => {\n    canvasState.pushToUndo(canvasRef.current.toDataURL());\n    axios.post(`http://localhost:5000/image?id=${params.id}`, {\n      img: canvasRef.current.toDataURL()\n    }).then(response => console.log(response.data));\n  };\n\n  const connectHandler = () => {\n    canvasState.setUsername(usernameRef.current.value);\n    setModal(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canvas\",\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      show: modal,\n      onHide: () => {},\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448\\u0435 \\u0438\\u043C\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ref: usernameRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => connectHandler(),\n          children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      onMouseDown: () => mouseDownHandler(),\n      ref: canvasRef,\n      width: 600,\n      height: 400\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}, \"frpiFXrwApBwe8aIG91Eg0cuJTQ=\", false, function () {\n  return [useParams];\n}));\n_c2 = Canvas;\nexport default Canvas;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Canvas$observer\");\n$RefreshReg$(_c2, \"Canvas\");","map":{"version":3,"sources":["/home/seu/projects/online_paint/Fullstack-websocket-paint/client/src/components/Canvas.jsx"],"names":["React","useEffect","useRef","useState","observer","canvasState","toolState","Brush","Modal","Button","useParams","Rect","axios","Canvas","canvasRef","usernameRef","modal","setModal","params","setCanvas","current","ctx","getContext","get","id","then","response","img","Image","src","data","onload","clearRect","width","height","drawImage","username","socket","WebSocket","setSocket","setSessionId","setTool","onopen","console","log","send","JSON","stringify","method","onmessage","event","msg","parse","drawHandler","figure","type","draw","x","y","staticDraw","color","beginPath","mouseDownHandler","pushToUndo","toDataURL","post","connectHandler","setUsername","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\nimport \"../styles/canvas.scss\"\nimport {observer} from \"mobx-react-lite\";\nimport canvasState from \"../store/canvasState\";\nimport toolState from \"../store/toolState\";\nimport Brush from \"../tools/Brush\";\nimport  {Modal, Button} from \"react-bootstrap\";\nimport {useParams} from \"react-router-dom\"\nimport Rect from \"../tools/Rect\";\nimport axios from 'axios'\n\nconst Canvas = observer(() => {\n    const canvasRef = useRef()\n    const usernameRef = useRef()\n    const [modal, setModal] = useState(true)\n    const params = useParams()\n\n    useEffect(() => {\n        canvasState.setCanvas(canvasRef.current)\n        let ctx = canvasRef.current.getContext('2d')\n        axios.get(`http://localhost:5000/image?id=${params.id}`)\n            .then(response => {\n                const img = new Image()\n                img.src = response.data\n                img.onload = () => {\n                    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height)\n                    ctx.drawImage(img, 0, 0, canvasRef.current.width, canvasRef.current.height)\n                }\n            })\n    }, [])\n\n    useEffect(() => {\n        if (canvasState.username) {\n            const socket = new WebSocket(`ws://localhost:5000/`);\n            canvasState.setSocket(socket)\n            canvasState.setSessionId(params.id)\n            toolState.setTool(new Brush(canvasRef.current, socket, params.id))\n            socket.onopen = () => {\n                console.log('Подключение установлено')\n                socket.send(JSON.stringify({\n                    id:params.id,\n                    username: canvasState.username,\n                    method: \"connection\"\n                }))\n            }\n            socket.onmessage = (event) => {\n                let msg = JSON.parse(event.data)\n                switch (msg.method) {\n                    case \"connection\":\n                        console.log(`пользователь ${msg.username} присоединился`)\n                        break\n                    case \"draw\":\n                        drawHandler(msg)\n                        break\n                }\n            }\n        }\n    }, [canvasState.username])\n\n    const drawHandler = (msg) => {\n        const figure = msg.figure\n        const ctx = canvasRef.current.getContext('2d')\n        switch (figure.type) {\n            case \"brush\":\n                Brush.draw(ctx, figure.x, figure.y)\n                break\n            case \"rect\":\n                Rect.staticDraw(ctx, figure.x, figure.y, figure.width, figure.height, figure.color)\n                break\n            case \"finish\":\n                ctx.beginPath()\n                break\n        }\n    }\n\n\n    const mouseDownHandler = () => {\n        canvasState.pushToUndo(canvasRef.current.toDataURL())\n        axios.post(`http://localhost:5000/image?id=${params.id}`, {img: canvasRef.current.toDataURL()})\n            .then(response => console.log(response.data))\n    }\n\n    const connectHandler = () => {\n        canvasState.setUsername(usernameRef.current.value)\n        setModal(false)\n    }\n\n    return (\n        <div className=\"canvas\">\n            <Modal show={modal} onHide={() => {}}>\n                <Modal.Header >\n                    <Modal.Title>Введите ваше имя</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <input type=\"text\" ref={usernameRef}/>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => connectHandler()}>\n                        Войти\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            <canvas onMouseDown={() => mouseDownHandler()} ref={canvasRef} width={600} height={400}/>\n        </div>\n    );\n});\n\nexport default Canvas;\n"]},"metadata":{},"sourceType":"module"}